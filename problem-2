class Solution {
    class TrieNode{
        boolean isEnd;
        TrieNode[] children;
        public TrieNode(){
            children=new TrieNode[26];
        }
    }
    TrieNode root;
    public Solution() {
        root=new TrieNode();
        
    }
    public String longestWord(String[] words) {
         TrieNode curr=root;
        String result="";
        for(String s:words){
            insert(s);
        }
        int max_length=0;
        for(String s:words){
            int length=0;
            System.out.println(s);
            for(int i=0;i<s.length();i++){
                char c=s.charAt(i);
                
                if(curr.isEnd==true && curr.children[c-'a']!=null){
                    length++;
                   
                }else{
                    break;
                }
                curr=curr.children[c-'a'];
        
            }
            curr=root;
            if(length==max_length ){
                if(s.compareTo(result)<0){
                    result=s;
                }
                    
                }
           else if(length>max_length){
                max_length=length;
                
              
               result=s;
           }
        }
        return result;
        
    }
    public void insert(String s){
        TrieNode curr=root;
 
        for(int i=0;i<s.length();i++){
            char c=s.charAt(i);
            if(curr.children[c-'a']==null){
                curr.children[c-'a']=new TrieNode();
            }
            curr=curr.children[c-'a'];
        }
        curr.isEnd=true;
    }
}
